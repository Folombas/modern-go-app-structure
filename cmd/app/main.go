package main

import (
	"fmt"
	"github.com/Folombas/modern-go-app-structure/internal/domain"
	"github.com/Folombas/modern-go-app-structure/internal/service"
	"github.com/Folombas/modern-go-app-structure/internal/usecase"
	"github.com/Folombas/modern-go-app-structure/pkg/logger"
)

func main() {
	logger.Info("üöÄ Starting delivery application")
	
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
	userRepo := domain.NewUserRepository()
	orderRepo := domain.NewOrderRepository()
	paymentService := service.NewPaymentService()
	
	// –°—Ü–µ–Ω–∞—Ä–∏–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
	orderUsecase := usecase.NewOrderUsecase(orderRepo, paymentService)
	
	// –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	user := userRepo.CreateUser("Courier Alex")
	fmt.Printf("üë§ User created: %s\n", user.Name)
	
	// –°–æ–∑–¥–∞–µ–º –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–∫–∞–∑
	order, err := orderUsecase.CreateOrder(user.ID, 690)
	if err != nil {
		logger.Error("‚ùå Order creation failed: " + err.Error())
		return
	}
	
	fmt.Printf("‚úÖ Order #%s completed! Amount: %d RUB\n", order.ID, order.Amount)
}